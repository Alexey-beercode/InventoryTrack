// src/app/components/inventory-item/create-inventory-item/create-inventory-item.component.ts (–û–ë–ù–û–í–õ–ï–ù–ù–´–ô)
import { Component, OnInit } from '@angular/core';
import { FormsModule, NgForm } from '@angular/forms';
import { InventoryItemService } from '../../../services/inventory-item.service';
import { SupplierService } from '../../../services/supplier.service';
import { BatchService } from '../../../services/batch.service';
import { CreateInventoryItemDto } from '../../../models/dto/inventory-item/create-inventory-item-dto';
import { SupplierResponseDto } from '../../../models/dto/supplier/supplier-response-dto';
import { CommonModule } from '@angular/common';
import { ErrorMessageComponent } from '../../shared/error/error.component';
import { BackButtonComponent } from '../../shared/back-button/back-button.component';
import { HeaderComponent } from '../../shared/header/header.component';
import { FooterComponent } from '../../shared/footer/footer.component';
import { UserResponseDTO } from '../../../models/dto/user/user-response-dto';
import { Router } from "@angular/router";

@Component({
  selector: 'app-create-inventory-item',
  templateUrl: './create-inventory-item.component.html',
  styleUrls: ['./create-inventory-item.component.css'],
  standalone: true,
  imports: [CommonModule, FormsModule, ErrorMessageComponent, BackButtonComponent, HeaderComponent, FooterComponent],
})
export class CreateInventoryItemComponent implements OnInit {
  newInventoryItem: CreateInventoryItemDto = {
    name: '',
    uniqueCode: '',
    quantity: 1,
    estimatedValue: 0,
    expirationDate: '',
    supplierId: '',
    warehouseId: '',
    deliveryDate: '',
    documentId: '',
    // üÜï –ù–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è –¢–¢–ù
    batchNumber: '',
    measureUnit: '—à—Ç',
    vatRate: 0,
    placesCount: 1,
    cargoWeight: 0,
    notes: ''
  };

  documentFile: File | null = null;
  suppliers: SupplierResponseDto[] = [];
  warehouseId: string = '';
  errorMessage: string | null = null;
  showDateError = false;
  showBatchNumberSuggestion = false;

  constructor(
    private inventoryItemService: InventoryItemService,
    private supplierService: SupplierService,
    private batchService: BatchService,
    private router: Router
  ) {}

  ngOnInit(): void {
    this.loadSuppliers();
    this.generateBatchNumber(); // –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –ø–∞—Ä—Ç–∏–∏
  }

  /** üìå –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ `userEmitter` –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫–ª–∞–¥ */
  onUserReceived(user: UserResponseDTO): void {
    if (!user || !user.warehouseId) {
      this.errorMessage = "–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Å–∫–ª–∞–¥–∞.";
      return;
    }

    this.warehouseId = user.warehouseId;
    this.newInventoryItem.warehouseId = this.warehouseId;
  }

  /** üìå –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ */
  loadSuppliers(): void {
    this.supplierService.getAllSuppliers().subscribe({
      next: (data) => (this.suppliers = data),
      error: () => (this.errorMessage = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤.'),
    });
  }

  /** üÜï –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –ø–∞—Ä—Ç–∏–∏ */
  generateBatchNumber(): void {
    const today = new Date();
    this.newInventoryItem.batchNumber = this.batchService.generateBatchNumber(today, 1);
    this.showBatchNumberSuggestion = true;
  }

  /** üÜï –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –ø–∞—Ä—Ç–∏–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞—Ç—ã –ø–æ—Å—Ç–∞–≤–∫–∏ */
  onDeliveryDateChange(): void {
    if (this.newInventoryItem.deliveryDate) {
      const deliveryDate = new Date(this.newInventoryItem.deliveryDate);
      const suggestedBatch = this.batchService.generateBatchNumber(deliveryDate, 1);

      if (!this.newInventoryItem.batchNumber || this.showBatchNumberSuggestion) {
        this.newInventoryItem.batchNumber = suggestedBatch;
      }
    }
  }

  /** üÜï –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –ø–∞—Ä—Ç–∏–∏ */
  validateBatchNumber(): boolean {
    if (!this.newInventoryItem.batchNumber) return true; // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ

    return this.batchService.isValidBatchNumber(this.newInventoryItem.batchNumber);
  }

  /** üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ */
  onFileSelected(event: Event): void {
    const input = event.target as HTMLInputElement;
    if (input.files && input.files.length > 0) {
      this.documentFile = input.files[0];
    }
  }

  /** üìå –°–æ–∑–¥–∞—ë—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å */
  createInventoryItem(form: NgForm): void {
    this.showDateError = false;
    this.errorMessage = null;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç
    if (
      this.isDateInPast(this.newInventoryItem.expirationDate) ||
      this.isDateInPast(this.newInventoryItem.deliveryDate)
    ) {
      this.showDateError = true;
      return;
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
    if (form.invalid) {
      this.errorMessage = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!';
      return;
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–∫–ª–∞–¥–∞
    if (!this.newInventoryItem.warehouseId) {
      this.errorMessage = '–ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å —Ü–µ–Ω–Ω–æ—Å—Ç—å –±–µ–∑ —Å–∫–ª–∞–¥–∞!';
      return;
    }

    // üÜï –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –ø–∞—Ä—Ç–∏–∏
    if (this.newInventoryItem.batchNumber && !this.validateBatchNumber()) {
      this.errorMessage = '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –ø–∞—Ä—Ç–∏–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: YYYY-MM-DD-XXXX';
      return;
    }

    // üÜï –í–∞–ª–∏–¥–∞—Ü–∏—è —á–∏—Å–ª–æ–≤—ã—Ö –ø–æ–ª–µ–π
    if (this.newInventoryItem.vatRate && (this.newInventoryItem.vatRate < 0 || this.newInventoryItem.vatRate > 100)) {
      this.errorMessage = '–°—Ç–∞–≤–∫–∞ –ù–î–° –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 0 –¥–æ 100%';
      return;
    }

    if (this.newInventoryItem.placesCount && this.newInventoryItem.placesCount < 1) {
      this.errorMessage = '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–∑–æ–≤—ã—Ö –º–µ—Å—Ç –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0';
      return;
    }

    if (this.newInventoryItem.cargoWeight && this.newInventoryItem.cargoWeight < 0) {
      this.errorMessage = '–ú–∞—Å—Å–∞ –≥—Ä—É–∑–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π';
      return;
    }

    if (this.documentFile) {
      this.uploadDocumentAndCreateItem(form);
    } else {
      this.createItem(form);
    }
  }

  private uploadDocumentAndCreateItem(form: NgForm): void {
    if (!this.documentFile) {
      this.createItem(form);
      return;
    }

    this.inventoryItemService.uploadDocument(this.documentFile).subscribe({
      next: (documentId: string) => {
        console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω, ID:', documentId);
        this.newInventoryItem.documentId = documentId;
        this.createItem(form);
      },
      error: (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', error);
        this.errorMessage = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞.';
      },
    });
  }

  /** üìå –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ */
  private createItem(form: NgForm): void {
    this.inventoryItemService.createInventoryItem(this.newInventoryItem).subscribe({
      next: (createdItem) => {
        console.log('‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∞:', createdItem);
        this.errorMessage = null;
        form.resetForm();
        this.resetNewInventoryItem();
        this.router.navigate(['/'])
      },
      error: (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è:', error);
        this.errorMessage = '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.';
      },
    });
  }

  /** üìå –°–±—Ä–æ—Å DTO –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è */
  private resetNewInventoryItem(): void {
    this.newInventoryItem = {
      name: '',
      uniqueCode: '',
      quantity: 1,
      estimatedValue: 0,
      expirationDate: '',
      supplierId: '',
      warehouseId: this.warehouseId,
      deliveryDate: '',
      documentId: '',
      // üÜï –°–±—Ä–æ—Å –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π
      batchNumber: '',
      measureUnit: '—à—Ç',
      vatRate: 0,
      placesCount: 1,
      cargoWeight: 0,
      notes: ''
    };
    this.generateBatchNumber(); // –ù–æ–≤—ã–π –Ω–æ–º–µ—Ä –ø–∞—Ä—Ç–∏–∏
  }

  isDateInPast(dateStr: string): boolean {
    if (!dateStr) return true;

    const inputDate = new Date(dateStr);
    const today = new Date();
    today.setHours(0, 0, 0, 0);

    return inputDate < today;
  }

  /** üìå –û—Ç–º–µ–Ω–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥ */
  cancel(): void {
    window.history.back();
  }
}
