import { Component, OnInit } from '@angular/core';
import { NgForm } from '@angular/forms';
import { InventoryItemService } from '../../../services/inventory-item.service';
import { WriteOffRequestService } from '../../../services/writeoff-request.service';
import { WriteOffReasonService } from '../../../services/writeoff-reason.service';
import { TokenService } from '../../../services/token.service';
import { UserService } from '../../../services/user.service';
import { InventoryItemResponseDto } from '../../../models/dto/inventory-item/inventory-item-response-dto';
import { WriteOffReasonResponseDto } from '../../../models/dto/writeoff-reason/writeoff-reason-response-dto';
import { CreateWriteOffRequestDto } from '../../../models/dto/writeoff-request/create-writeoff-request-dto';
import { UserResponseDTO } from '../../../models/dto/user/user-response-dto';
import { HeaderComponent } from '../../shared/header/header.component';
import { FooterComponent } from '../../shared/footer/footer.component';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { BackButtonComponent } from "../../shared/back-button/back-button.component";
import { ErrorMessageComponent } from '../../shared/error/error.component';
import { Router } from '@angular/router';

@Component({
  selector: 'app-writeoff-create',
  templateUrl: './writeoff-create.component.html',
  styleUrls: ['./writeoff-create.component.css'],
  standalone: true,
  imports: [
    HeaderComponent,
    FooterComponent,
    CommonModule,
    BackButtonComponent,
    ErrorMessageComponent,
    FormsModule,
  ],
})
export class WriteOffCreateComponent implements OnInit {
  warehouseId: string = '';
  items: InventoryItemResponseDto[] = [];
  writeOffReasons: WriteOffReasonResponseDto[] = [];
  selectedReasonId: string = '';
  anotherReason: string = '';
  selectedItemId: string = '';
  quantity: number = 1;
  maxQuantity: number = 1;
  errorMessage: string | null = null;

  constructor(
    private inventoryItemService: InventoryItemService,
    private writeOffRequestService: WriteOffRequestService,
    private writeOffReasonService: WriteOffReasonService,
    private tokenService: TokenService,
    private userService: UserService,
    private router: Router
  ) {}

  ngOnInit(): void {
    this.loadUserWarehouse();
  }

  /** üìå –ó–∞–≥—Ä—É–∂–∞–µ–º ID —Å–∫–ª–∞–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  loadUserWarehouse(): void {
    const userId = this.tokenService.getUserId();
    if (!userId) {
      this.errorMessage = "‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.";
      return;
    }

    this.userService.getById(userId).subscribe({
      next: (user: UserResponseDTO) => {
        if (user.warehouseId) {
          this.warehouseId = user.warehouseId;
          this.loadInventoryItems();
          this.loadWriteOffReasons();
        } else {
          this.errorMessage = "‚ùå –û—à–∏–±–∫–∞: —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Å–∫–ª–∞–¥–∞.";
        }
      },
      error: () => {
        this.errorMessage = "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.";
      }
    });
  }

  /** üìå –ó–∞–≥—Ä—É–∂–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ —Å–∫–ª–∞–¥–∞ */
  loadInventoryItems(): void {
    if (!this.warehouseId) return;

    this.inventoryItemService.getInventoryItemsByWarehouse(this.warehouseId).subscribe({
      next: (data) => {
        this.items = data;
      },
      error: () => {
        this.errorMessage = "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤.";
      },
    });
  }

  /** üìå –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–∏—á–∏–Ω—ã —Å–ø–∏—Å–∞–Ω–∏—è */
  loadWriteOffReasons(): void {
    this.writeOffReasonService.getAll().subscribe({
      next: (data) => {
        this.writeOffReasons = data;
      },
      error: () => {
        this.errorMessage = "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏—á–∏–Ω —Å–ø–∏—Å–∞–Ω–∏—è.";
      },
    });
  }

  /** üìå –û–±–Ω–æ–≤–ª—è–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–æ–≤–∞—Ä–∞ */
  updateMaxQuantity(): void {
    const selectedItem = this.items.find(item => item.id === this.selectedItemId);
    this.maxQuantity = selectedItem ? selectedItem.quantity : 1;
    if (this.quantity > this.maxQuantity) {
      this.quantity = this.maxQuantity;
    }
  }

  /** üìå –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–ø–∏—Å–∞–Ω–∏–µ */
  submitWriteOffRequest(form: NgForm): void {
    if (form.invalid || this.quantity > this.maxQuantity) {
      this.errorMessage = "‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∏ —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ!";
      return;
    }

    const request: CreateWriteOffRequestDto = {
      itemId: this.selectedItemId,
      warehouseId: this.warehouseId,
      quantity: this.quantity,
      reasonId: this.selectedReasonId,
      anotherReason: this.selectedReasonId === 'other' ? this.anotherReason : undefined
    };

    this.writeOffRequestService.create(request).subscribe({
      next: () => {
        alert('‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
        this.router.navigate(['/']);
      },
      error: () => {
        this.errorMessage = "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞.";
      },
    });
  }

  /** üìå –ú–µ—Ç–æ–¥ –æ—Ç–º–µ–Ω—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ */
  cancel(): void {
    this.router.navigate(['/']);
  }
}
